// ============================================
// UI COMPONENTS - Replacing shadcn/ui styles
// ============================================

// Button Component
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  white-space: nowrap;
  border-radius: var(--radius);
  font-size: 0.875rem;
  font-weight: 500;
  transition: var(--transition-smooth);
  cursor: pointer;
  border: none;
  outline: none;
  text-decoration: none;

  &:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px var(--ring);
  }

  &:disabled {
    pointer-events: none;
    opacity: 0.5;
    cursor: not-allowed;
  }

  // Button variants
  &--default {
    background-color: var(--primary);
    color: var(--primary-foreground);
    
    &:hover {
      background-color: var(--primary-hover);
    }
  }

  &--destructive {
    background-color: var(--destructive);
    color: var(--destructive-foreground);
    
    &:hover {
      opacity: 0.9;
    }
  }

  &--outline {
    border: 1px solid var(--border);
    background-color: var(--background);
    color: var(--foreground);
    
    &:hover {
      background-color: var(--accent);
      color: var(--accent-foreground);
    }
  }

  &--secondary {
    background-color: var(--secondary);
    color: var(--secondary-foreground);
    
    &:hover {
      opacity: 0.8;
    }
  }

  &--ghost {
    background-color: transparent;
    color: var(--foreground);
    
    &:hover {
      background-color: var(--accent);
      color: var(--accent-foreground);
    }
  }

  &--link {
    background-color: transparent;
    color: var(--primary);
    text-decoration: underline;
    text-underline-offset: 4px;
    
    &:hover {
      text-decoration: none;
    }
  }

  // Button sizes
  &--sm {
    height: 2.25rem;
    border-radius: calc(var(--radius) - 2px);
    padding: 0 0.75rem;
  }

  &--default-size {
    height: 2.5rem;
    padding: 0.5rem 1rem;
  }

  &--lg {
    height: 2.75rem;
    border-radius: var(--radius);
    padding: 0 2rem;
  }

  &--icon {
    height: 2.5rem;
    width: 2.5rem;
    padding: 0;
  }

  // Icon styling within button
  svg {
    pointer-events: none;
    width: 1rem;
    height: 1rem;
    flex-shrink: 0;
  }
}

// Card Component
.card {
  border-radius: var(--radius);
  border: 1px solid var(--border);
  background-color: var(--card);
  color: var(--card-foreground);
  box-shadow: var(--shadow-card);

  &__header {
    display: flex;
    flex-direction: column;
    gap: 0.375rem;
    padding: 1.5rem;
  }

  &__title {
    font-size: 1.125rem;
    font-weight: 600;
    line-height: 1;
    letter-spacing: -0.025em;
  }

  &__description {
    font-size: 0.875rem;
    color: var(--muted-foreground);
  }

  &__content {
    padding: 1.5rem;
    padding-top: 0;
  }

  &__footer {
    display: flex;
    align-items: center;
    padding: 1.5rem;
    padding-top: 0;
  }
}

// Input Component
.input {
  display: flex;
  height: 2.5rem;
  width: 100%;
  border-radius: var(--radius);
  border: 1px solid var(--input);
  background-color: var(--background);
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  color: var(--foreground);
  transition: var(--transition-smooth);

  &::placeholder {
    color: var(--muted-foreground);
  }

  &:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px var(--ring);
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  &--file {
    border: 2px dashed var(--border);
    background-color: transparent;
    font-size: 0.875rem;
    font-weight: 500;
    
    &:hover {
      background-color: var(--accent);
    }
  }
}

// Label Component
.label {
  font-size: 0.875rem;
  font-weight: 500;
  line-height: 1;
  color: var(--foreground);

  &[data-disabled] {
    cursor: not-allowed;
    opacity: 0.7;
  }
}

// Badge Component
.badge {
  display: inline-flex;
  align-items: center;
  border-radius: 9999px;
  border: 1px solid transparent;
  padding: 0.125rem 0.625rem;
  font-size: 0.75rem;
  font-weight: 600;
  line-height: 1;
  transition: var(--transition-smooth);

  &--default {
    border-color: transparent;
    background-color: var(--primary);
    color: var(--primary-foreground);
    
    &:hover {
      background-color: var(--primary-hover);
    }
  }

  &--secondary {
    border-color: transparent;
    background-color: var(--secondary);
    color: var(--secondary-foreground);
    
    &:hover {
      opacity: 0.8;
    }
  }

  &--destructive {
    border-color: transparent;
    background-color: var(--destructive);
    color: var(--destructive-foreground);
    
    &:hover {
      opacity: 0.8;
    }
  }

  &--outline {
    color: var(--foreground);
    border-color: var(--border);
    background-color: transparent;
  }
}

// Dialog/Modal overlays
.dialog-overlay {
  position: fixed;
  inset: 0;
  z-index: 50;
  background-color: rgba(0, 0, 0, 0.8);
  
  &[data-state="open"] {
    animation: fade-in 0.2s ease-out;
  }
  
  &[data-state="closed"] {
    animation: fade-out 0.2s ease-in;
  }
}

.dialog-content {
  position: fixed;
  left: 50%;
  top: 50%;
  z-index: 50;
  width: 90vw;
  max-width: 32rem;
  transform: translate(-50%, -50%);
  gap: 1rem;
  border: 1px solid var(--border);
  background-color: var(--background);
  padding: 1.5rem;
  box-shadow: var(--shadow-elegant);
  border-radius: var(--radius);
  
  &[data-state="open"] {
    animation: fade-in 0.2s ease-out, scale-in 0.2s ease-out;
  }
  
  &[data-state="closed"] {
    animation: fade-out 0.2s ease-in, scale-out 0.2s ease-in;
  }
}

// Separator Component
.separator {
  flex-shrink: 0;
  background-color: var(--border);
  
  &--horizontal {
    height: 1px;
    width: 100%;
  }
  
  &--vertical {
    height: 100%;
    width: 1px;
  }
}

// Alert Component
.alert {
  position: relative;
  width: 100%;
  border-radius: var(--radius);
  border: 1px solid var(--border);
  padding: 1rem;
  
  &--default {
    background-color: var(--background);
    color: var(--foreground);
  }
  
  &--destructive {
    border-color: var(--destructive);
    color: var(--destructive);
    background-color: color-mix(in srgb, var(--destructive) 10%, transparent);
  }
  
  &__title {
    margin-bottom: 0.25rem;
    font-weight: 500;
    line-height: 1;
    letter-spacing: -0.025em;
  }
  
  &__description {
    font-size: 0.875rem;
    opacity: 0.8;
  }
}

// Progress Component
.progress {
  position: relative;
  height: 1rem;
  width: 100%;
  overflow: hidden;
  border-radius: 9999px;
  background-color: var(--secondary);
  
  &__indicator {
    height: 100%;
    width: 100%;
    flex: 1 1 0%;
    background-color: var(--primary);
    transition: all 0.3s ease;
  }
}

// Skeleton Component
.skeleton {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  border-radius: var(--radius);
  background-color: var(--muted);
}

// Toast Components
.toast-viewport {
  position: fixed;
  top: 0;
  z-index: 100;
  display: flex;
  max-height: 100vh;
  width: 100%;
  flex-direction: column-reverse;
  padding: 1rem;

  @media (min-width: 640px) {
    bottom: 0;
    right: 0;
    top: auto;
    flex-direction: column;
  }

  @media (min-width: 768px) {
    max-width: 26.25rem;
  }
}

.toast {
  position: relative;
  pointer-events: auto;
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: space-between;
  column-gap: 1rem;
  overflow: hidden;
  border-radius: var(--radius);
  border: 1px solid var(--border);
  padding: 1.5rem;
  padding-right: 2rem;
  box-shadow: var(--shadow-elegant);
  transition: var(--transition-smooth);

  &[data-swipe="cancel"] {
    transform: translateX(0);
  }

  &[data-swipe="end"] {
    transform: translateX(var(--radix-toast-swipe-end-x));
  }

  &[data-swipe="move"] {
    transform: translateX(var(--radix-toast-swipe-move-x));
    transition: none;
  }

  &[data-state="open"] {
    animation: fade-in 0.3s ease-out, slide-in-from-top 0.3s ease-out;

    @media (min-width: 640px) {
      animation: fade-in 0.3s ease-out, slide-in-from-bottom 0.3s ease-out;
    }
  }

  &[data-state="closed"] {
    animation: fade-out 0.3s ease-in, slide-out-to-right 0.3s ease-in;
  }

  &[data-swipe="end"] {
    animation: fade-out 0.3s ease-in, slide-out-to-right 0.3s ease-in;
  }

  &--default {
    background-color: var(--background);
    color: var(--foreground);
  }

  &--destructive {
    border-color: var(--destructive);
    background-color: var(--destructive);
    color: var(--destructive-foreground);
  }
}

.toast-action {
  display: inline-flex;
  height: 2rem;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius);
  border: 1px solid var(--border);
  background-color: transparent;
  padding: 0 0.75rem;
  font-size: 0.875rem;
  font-weight: 500;
  transition: var(--transition-smooth);

  &:hover {
    background-color: var(--secondary);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--ring);
  }

  &:disabled {
    pointer-events: none;
    opacity: 0.5;
  }

  .toast--destructive & {
    border-color: color-mix(in srgb, var(--muted) 40%, transparent);

    &:hover {
      border-color: color-mix(in srgb, var(--destructive) 30%, transparent);
      background-color: var(--destructive);
      color: var(--destructive-foreground);
    }

    &:focus {
      box-shadow: 0 0 0 2px var(--destructive);
    }
  }
}

.toast-close {
  position: absolute;
  right: 0.5rem;
  top: 0.5rem;
  border-radius: var(--radius);
  padding: 0.25rem;
  color: color-mix(in srgb, var(--foreground) 50%, transparent);
  opacity: 0;
  transition: opacity 0.2s ease;

  &:hover {
    color: var(--foreground);
  }

  &:focus {
    opacity: 1;
    outline: none;
    box-shadow: 0 0 0 2px var(--ring);
  }

  .toast:hover & {
    opacity: 1;
  }

  .toast--destructive & {
    color: color-mix(in srgb, var(--destructive-foreground) 70%, transparent);

    &:hover {
      color: var(--destructive-foreground);
    }

    &:focus {
      box-shadow: 0 0 0 2px var(--destructive);
    }
  }
}

.toast-title {
  font-size: 0.875rem;
  font-weight: 600;
}

.toast-description {
  font-size: 0.875rem;
  opacity: 0.9;
}

// Additional toast animations
@keyframes slide-in-from-top {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slide-in-from-bottom {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slide-out-to-right {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(100%);
  }
}

// Textarea Component
.textarea {
  display: flex;
  min-height: 5rem;
  width: 100%;
  border-radius: var(--radius);
  border: 1px solid var(--input);
  background-color: var(--background);
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  color: var(--foreground);
  resize: vertical;
  transition: var(--transition-smooth);

  &::placeholder {
    color: var(--muted-foreground);
  }

  &:focus-visible {
    outline: none;
    box-shadow: 0 0 0 2px var(--ring);
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}

// Animations for components
@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(10px);
  }
}

@keyframes scale-in {
  from {
    transform: scale(0.95);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes scale-out {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.95);
    opacity: 0;
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}