// SCSS Mixins for responsive design and utilities
@use 'variables' as *;

// Responsive Breakpoints
@mixin mobile {
  @media (max-width: map-get($breakpoints, mobile) - 1px) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: map-get($breakpoints, mobile)) and (max-width: map-get($breakpoints, tablet) - 1px) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: map-get($breakpoints, tablet)) {
    @content;
  }
}

@mixin xl-desktop {
  @media (min-width: map-get($breakpoints, xl)) {
    @content;
  }
}

// Mobile-first responsive mixins
@mixin min-width($breakpoint) {
  @media (min-width: map-get($breakpoints, $breakpoint)) {
    @content;
  }
}

@mixin max-width($breakpoint) {
  @media (max-width: map-get($breakpoints, $breakpoint) - 1px) {
    @content;
  }
}

// Transition mixins
@mixin smooth-transition($properties...) {
  $property-list: ();
  @each $property in $properties {
    $property-list: append($property-list, #{$property} #{$transition-smooth}, comma);
  }
  @if length($properties) == 0 {
    transition: #{$transition-smooth};
  } @else {
    transition: $property-list;
  }
}

@mixin fast-transition($properties...) {
  $property-list: ();
  @each $property in $properties {
    $property-list: append($property-list, #{$property} #{$transition-fast}, comma);
  }
  @if length($properties) == 0 {
    transition: #{$transition-fast};
  } @else {
    transition: $property-list;
  }
}

@mixin slow-transition($properties...) {
  $property-list: ();
  @each $property in $properties {
    $property-list: append($property-list, #{$property} #{$transition-slow}, comma);
  }
  @if length($properties) == 0 {
    transition: #{$transition-slow};
  } @else {
    transition: $property-list;
  }
}

// Button mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  white-space: nowrap;
  border-radius: $radius;
  font-size: 0.875rem;
  font-weight: 500;
  @include smooth-transition();
  
  &:focus-visible {
    outline: none;
    ring-offset-background: 2px;
    ring: 2px solid;
    ring-color: $ring;
    ring-offset: 2px;
  }
  
  &:disabled {
    pointer-events: none;
    opacity: 0.5;
  }
}

@mixin button-variant($bg, $fg, $hover-bg: null) {
  background-color: $bg;
  color: $fg;
  
  @if $hover-bg {
    &:hover {
      background-color: $hover-bg;
    }
  } @else {
    &:hover {
      background-color: rgba($bg, 0.9);
    }
  }
}

// Card mixins
@mixin card-base {
  border-radius: $radius;
  border: 1px solid;
  border-color: var(--border);
  background-color: var(--card);
  color: var(--card-foreground);
  box-shadow: 0 2px 8px -2px hsl(217, 19%, 27%, 0.08);
}

@mixin card-hover {
  @include smooth-transition(transform, box-shadow);
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px -4px hsl(217, 91%, 32%, 0.1);
  }
}

// Layout mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Typography mixins
@mixin heading-1 {
  font-size: 2.25rem;
  font-weight: 800;
  line-height: 1.2;
  letter-spacing: -0.025em;
}

@mixin heading-2 {
  font-size: 1.875rem;
  font-weight: 700;
  line-height: 1.3;
  letter-spacing: -0.025em;
}

@mixin heading-3 {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1.4;
}

@mixin body-text {
  font-size: 1rem;
  line-height: 1.6;
}

@mixin small-text {
  font-size: 0.875rem;
  line-height: 1.5;
}

// Shadow mixins
@mixin shadow-elegant {
  box-shadow: 0 4px 16px -4px hsl(217, 91%, 32%, 0.1);
}

@mixin shadow-card {
  box-shadow: 0 2px 8px -2px hsl(217, 19%, 27%, 0.08);
}

@mixin shadow-glow($color: $primary-glow) {
  box-shadow: 0 0 40px hsl($color, 0.4);
}

// Form mixins
@mixin input-base {
  display: flex;
  height: 2.5rem;
  width: 100%;
  border-radius: $radius;
  border: 1px solid;
  border-color: var(--input);
  background-color: var(--background);
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  @include smooth-transition(border-color);
  
  &:focus {
    outline: none;
    ring: 2px solid;
    ring-color: var(--ring);
    ring-offset: 2px;
  }
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
  
  &::placeholder {
    color: var(--muted-foreground);
  }
}

// Animation mixins
@mixin fadeIn($duration: 0.3s) {
  animation: fadeIn $duration ease-out;
}

@mixin slideUp($duration: 0.3s) {
  animation: slideUp $duration ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}